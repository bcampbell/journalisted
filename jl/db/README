This directory holds changes to be applied to the live database.
After a change has been applied, the sql file should be moved into the
"applied" dir. There is currently no master schema file maintained.

schema.sql is a dump of the database schema, which may or may not be up to
date :-)
basedata.sql is a dump of just the organisation table, which the scrapers
need.
TODO: schema.sql and basedata.sql need refreshing.


create dummy db
---------------

Useful to have a dummy database for testing. Rough steps:

create dummy db owned by jl user
$ sudo -u postgres createdb -O jl -E utf8 dummyjl

test that you can connect as jl user
$ psql -U jl dummyjl

most likely you'll need to fiddle with permissions:
$ sudoedit /etc/postgresql/9.2/main/pg_hba.conf
$ sudo /etc/init.d/postgresql reload

load the schema:
$ cat schema.sql | psql -U jl dummyjl

change conf/general to use dummyjl (set OPTION_JL_DB_NAME)

create some fake data:
$ cd ../hacks
$ ./generate-junk

Create a user then give admin rights:
$ psql -U jl dummyjl
> insert into person_permission (person_id,permission) values (1,'admin');


notes on restoring db
---------------------

There is an annoying issue with plpgsql language support during restore:

$ pg_restore -U jl -d jl DUMPFILE
pg_restore: [archiver (db)] Error while PROCESSING TOC:
pg_restore: [archiver (db)] Error from TOC entry 516; 2612 11574 PROCEDURAL LANGUAGE plpgsql postgres
pg_restore: [archiver (db)] could not execute query: ERROR:  must be owner of language plpgsql
    Command was: CREATE OR REPLACE PROCEDURAL LANGUAGE plpgsql;

Some discussion here:

http://comments.gmane.org/gmane.comp.db.postgresql.general/156681

Looks like it's OK to ignore - plpgsql is already installed in the database,
but the jl user doesn't have the permissions to create/replace it.
OK (I guess) for manual restores, but for anything automated you'd want to
get rid of it - it'd affect the pg_restore return code.

Possible fixes:

1) remove plpgsql from template1 so the new database is created without it.
2) could manually remove plpgsql from the db (as the postgres user) before
   the restore?
2) filtering out the offending command from the dumpfile via the -l and -L
   flags on pg_restore


